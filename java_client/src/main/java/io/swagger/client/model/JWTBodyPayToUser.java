/*
 * Kin Ecosystem
 * Apis for client to server interaction
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JWTBodyPartRecipient;
import io.swagger.client.model.JWTBodyPartSender;
import io.swagger.client.model.JWTBodyPayToUserOffer;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * JWTBodyPayToUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-10-25T17:08:07.569+03:00")
public class JWTBodyPayToUser {
@SerializedName("iat")
  private BigDecimal iat = null;
  @SerializedName("iss")
  private String iss = null;
  @SerializedName("exp")
  private BigDecimal exp = null;
  
    /**
   * subject
   */
  @JsonAdapter(SubEnum.Adapter.class)
  public enum SubEnum {
    
    REGISTER("register"),
    SPEND("spend"),
    EARN("earn"),
    PAY_TO_USER("pay_to_user"),
    PAYMENT_CONFIRMATION("payment_confirmation");

    private String value;

    SubEnum(String value) {
      this.value = value;
    }
    
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public static SubEnum fromValue(String text) {
      for (SubEnum b : SubEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    
    public static class Adapter extends TypeAdapter<SubEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SubEnum.fromValue(String.valueOf(value));
      }
    }
  }
  
  @SerializedName("sub")
  private SubEnum sub = null;
  @SerializedName("sender")
  private JWTBodyPartSender sender = null;
  @SerializedName("recipient")
  private JWTBodyPartRecipient recipient = null;
  @SerializedName("offer")
  private JWTBodyPayToUserOffer offer = null;
  
  public JWTBodyPayToUser iat(BigDecimal iat) {
    this.iat = iat;
    return this;
  }

  
  /**
  * issued at - seconds from epoc
  * @return iat
  **/
  @ApiModelProperty(required = true, value = "issued at - seconds from epoc")
  public BigDecimal getIat() {
    return iat;
  }
  public void setIat(BigDecimal iat) {
    this.iat = iat;
  }
  
  public JWTBodyPayToUser iss(String iss) {
    this.iss = iss;
    return this;
  }

  
  /**
  * issuer name, the same as app_id (kik)
  * @return iss
  **/
  @ApiModelProperty(required = true, value = "issuer name, the same as app_id (kik)")
  public String getIss() {
    return iss;
  }
  public void setIss(String iss) {
    this.iss = iss;
  }
  
  public JWTBodyPayToUser exp(BigDecimal exp) {
    this.exp = exp;
    return this;
  }

  
  /**
  * expiration - seconds from epoc
  * @return exp
  **/
  @ApiModelProperty(required = true, value = "expiration - seconds from epoc")
  public BigDecimal getExp() {
    return exp;
  }
  public void setExp(BigDecimal exp) {
    this.exp = exp;
  }
  
  public JWTBodyPayToUser sub(SubEnum sub) {
    this.sub = sub;
    return this;
  }

  
  /**
  * subject
  * @return sub
  **/
  @ApiModelProperty(required = true, value = "subject")
  public SubEnum getSub() {
    return sub;
  }
  public void setSub(SubEnum sub) {
    this.sub = sub;
  }
  
  public JWTBodyPayToUser sender(JWTBodyPartSender sender) {
    this.sender = sender;
    return this;
  }

  
  /**
  * Get sender
  * @return sender
  **/
  @ApiModelProperty(required = true, value = "")
  public JWTBodyPartSender getSender() {
    return sender;
  }
  public void setSender(JWTBodyPartSender sender) {
    this.sender = sender;
  }
  
  public JWTBodyPayToUser recipient(JWTBodyPartRecipient recipient) {
    this.recipient = recipient;
    return this;
  }

  
  /**
  * Get recipient
  * @return recipient
  **/
  @ApiModelProperty(required = true, value = "")
  public JWTBodyPartRecipient getRecipient() {
    return recipient;
  }
  public void setRecipient(JWTBodyPartRecipient recipient) {
    this.recipient = recipient;
  }
  
  public JWTBodyPayToUser offer(JWTBodyPayToUserOffer offer) {
    this.offer = offer;
    return this;
  }

  
  /**
  * Get offer
  * @return offer
  **/
  @ApiModelProperty(required = true, value = "")
  public JWTBodyPayToUserOffer getOffer() {
    return offer;
  }
  public void setOffer(JWTBodyPayToUserOffer offer) {
    this.offer = offer;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JWTBodyPayToUser jwTBodyPayToUser = (JWTBodyPayToUser) o;
    return Objects.equals(this.iat, jwTBodyPayToUser.iat) &&
        Objects.equals(this.iss, jwTBodyPayToUser.iss) &&
        Objects.equals(this.exp, jwTBodyPayToUser.exp) &&
        Objects.equals(this.sub, jwTBodyPayToUser.sub) &&
        Objects.equals(this.sender, jwTBodyPayToUser.sender) &&
        Objects.equals(this.recipient, jwTBodyPayToUser.recipient) &&
        Objects.equals(this.offer, jwTBodyPayToUser.offer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iat, iss, exp, sub, sender, recipient, offer);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JWTBodyPayToUser {\n");
    
    sb.append("    iat: ").append(toIndentedString(iat)).append("\n");
    sb.append("    iss: ").append(toIndentedString(iss)).append("\n");
    sb.append("    exp: ").append(toIndentedString(exp)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    offer: ").append(toIndentedString(offer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



