openapi: 3.0.0
info:
  version: 1.0.0
  title: Kin Ecosystem
  description: Apis for client to server interaction

servers:
  - url: https://api.kinfoundation.com/v1/
  - url: https://api-stage.kinfoundation.com/v1/
  - url: https://api-test.kinfoundation.com/v1/

paths: 
  /offers:
    get:
     parameters:
        - $ref: '#/components/parameters/RequestId'
     description: Return a list of offers
     operationId: getOffers
     responses:
        200:
          description: Successfully returned a list of offers
          content:
            application/json:
              schema:
                type: object
                properties:
                  offers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Offer'
        default:
          description: Some Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /offers/{offer_id}/order:
    post:
      description: create an order for an offer
      operationId: createOrder
      parameters: 
        - in: path
          name: offer_id
          required: true
          schema:
            type:
              string
          description: The offer id
        - $ref: '#/components/parameters/RequestId'
      responses:
        200:
          description: Successfully returned a list of offers
          content:
            application/json:
              schema:
                type: object
          
security:
  - ApiKeyAuth: []  
  
components:

  parameters:
    RequestId:
      in: header
      name: X-REQUEST-ID
      required: true
      schema:
        type: string
      description: A unique id for the request. A retransmitted request will have the same id
    
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      
  schemas:
    Question:
      type: object
      properties:
        title:
          type: string
        answers:
          type: array
          items:
            type: string
            
    MultiChoicePoll:
      type: object
      properties:
        content_type: 
          type: string
          enum: [MultiChoicePoll]
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
            
    SliderPoll:
      type: object
      properties:
        content_type: 
          type: string
          enum: [SliderPoll]
        min:
          type: integer
        max:
          type: integer
          
    Coupon:
      type: object
      properties:
        content_type: 
          type: string
          enum: [Coupon]
        description:
          type: string
          
    Offer:
      type: object
      required:
        - id
        - title
        - description
        - image
        - offer_type
        - amount
        - content

      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        image:
          type: string
        limits:
          $ref: '#/components/schemas/Limits'
        amount:
          type: integer
        content:
          type: object
          oneOf:
            - $ref: '#/components/schemas/MultiChoicePoll'
            - $ref: '#/components/schemas/SliderPoll'
            - $ref: '#/components/schemas/Coupon'
          discriminator:
            propertyName: content_type
        offer_type:
          type: string
          enum: [earn, spend]
          
    Limits:
      type: object
      properties:
        supply:
          type: integer
        exipration:
          type: string
          format: date-time
          
    Order:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        recipient_address:
          type: string
        
    Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
