swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Ecosystem API swagger2.0"
host: "api.kinfoundation.com"
basePath: "/v2"
schemes:
- "https"
paths:
  '/offers':
    parameters:
    - $ref: '#/parameters/RequestId'
    get:
      security:
      - ApiKeyAuth: []
      produces:
      - "application/json"
      description: Return a list of offers
      operationId: getOffers
      responses:
        200:
          description: Successfully returned a list of offers
          schema:
            $ref: '#/definitions/OfferList'
        default:
          description: "Generic Error"
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ecosystem
  '/offers/{offer_id}/order':
    parameters:
    - in: path
      name: offer_id
      required: true
      type: string
      description: The offer id
    - $ref: '#/parameters/RequestId'
    post:
      security:
      - ApiKeyAuth: []
      consumes:
      - "application/json"
      produces:
      - "application/json"
      description: create an order for an offer
      operationId: createOrder
      responses:
        '200':
          description: Successfully created an order for an offer
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Offer ended
          schema:
            $ref: '#/definitions/Error'
        default:
          description: "Generic Error"
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ecosystem
  '/orders/{order_id}':
    parameters:
      - in: path
        name: order_id
        required: true
        type: string
        description: The order id
      - $ref: '#/parameters/RequestId'
    delete:
      security:
      - ApiKeyAuth: []
      produces:
        - "application/json"
      description: cancel an order
      operationId: cancelOrder
      responses:
        '204':
          description: Canceled order
        default:
          description: "Generic Error"
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ecosystem
    post:
      security:
      - ApiKeyAuth: []
      description: submit an order
      operationId: submitOrder
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: body
        in: body
        description: submission of an order
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/SpendSubmission'
          - $ref: '#/definitions/EarnSubmission'
      responses:
        '200':
          description: Submission result
          schema:
            $ref: '#/definitions/SubmissionResult'
        default:
          description: "Generic Error"
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ecosystem

  /transactions:
    parameters:
      - $ref: '#/parameters/RequestId'
    get:
      description: get user history
      operationId: getHistory
      produces:
      - "application/json"
      responses:
        '200':
          description: History result
          schema:
            $ref: '#/definitions/TransactionHistoryList'
        default:
          description: "Generic Error"
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ecosystem

securityDefinitions:
  ApiKeyAuth:
    type: "apiKey"
    name: "api_key"
    in: "header"

parameters:
  RequestId:
    in: "header"
    name: X-REQUEST-ID
    required: true
    type: string
    description: >-
      A unique id for the request. A retransmitted request will have the same
      id

definitions:
  TransactionHistoryItem:
    type: object
    properties:
      status:
        type: string
        enum:
          - pending
          - completed
          - failed
      order_id:
        type: string
      order:
        $ref: '#/definitions/SubmissionResult'
  TransactionHistoryList:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionHistoryItem'
  Question:
    type: object
    properties:
      title:
        type: string
      answers:
        type: array
        items:
          type: string
  MultiChoicePoll:
    type: object
    properties:
      content_type:
        type: string
        enum:
          - MultiChoicePoll
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
  MultiChoicePollAnswer:
    type: object
    properties:
      content_type:
        type: string
        enum:
          - MultiChoicePollAnswer
      answers:
        type: array
        items:
          type: integer
  SliderPoll:
    type: object
    properties:
      content_type:
        type: string
        enum:
          - SliderPoll
      min:
        type: integer
      max:
        type: integer
  SliderPollAnswer:
    type: object
    properties:
      content_type:
        type: string
        enum:
          - SliderPollAnswer
      value:
        type: number
  Coupon:
    type: object
    properties:
      content_type:
        type: string
        enum:
          - Coupon
      description:
        type: string
  Offer:
    type: object
    required:
      - id
      - title
      - description
      - image
      - offer_type
      - amount
      - content
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      image:
        type: string
      limits:
        $ref: '#/definitions/Limits'
      amount:
        type: integer
      content:
        type: object
        allOf:
        - $ref: '#/definitions/MultiChoicePoll'
        - $ref: '#/definitions/SliderPoll'
        - $ref: '#/definitions/Coupon'
        - type: object
          properties:
            offer_type:
              type: string
      offer_type:
        type: string
        enum:
          - earn
          - spend
  OfferList:
    type: object
    properties:
      offers:
        type: array
        items:
          $ref: '#/definitions/Offer'
  Limits:
    type: object
    properties:
      supply:
        type: integer
      expiration:
        type: string  # formatted in iso 8601 in UTC (2018-01-29T10:47:46)
  Order:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      recipient_address:
        type: string
  SpendSubmission:
    type: object
    required:
      - transaction_id
    properties:
      transaction_id:
        type: string
      sender_address:
        type: string
  EarnSubmission:
    type: object
    required:
      - recipient_address
    properties:
      recipient_address:
        type: string
      completed_form:
        type: object
        allOf:
        - $ref: '#/definitions/MultiChoicePollAnswer'
        - $ref: '#/definitions/SliderPollAnswer'
        - type: object
          properties:
            content_type:
              type: string
  EarnResult:
    type: object
    required:
      - transaction_id
      - offer_type
    properties:
      offer_type:
        type: string
        enum:
          - EarnResult
      transaction_id:
        type: string
      sender_address:
        type: string
  SpendResult:
    type: object
    required:
      - asset
      - offer_type
    properties:
      offer_type:
        type: string
        enum:
          - EarnResult
      asset:
        type: object
        properties:
          coupon_code:
            type: string
          asset_type:
            type: string
            enum:
              - coupon_code
  SubmissionResult:
    type: object
    required:
      - order_id
      - content
    properties:
      order_id:
        type: string
      content:
        type: object
        allOf:
        - $ref: '#/definitions/SpendResult'
        - $ref: '#/definitions/EarnResult'
        - type: object
          properties:
            offer_type:
              type: string
  Error:
    type: object
    required:
      - error
      - code
    properties:
      error:
        type: string
      message:
        type: string
      code:
        type: integer
